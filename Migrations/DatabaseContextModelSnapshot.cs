// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentRandomizer.EntityFrameworkCore;

#nullable disable

namespace StudentRandomizer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("StudentRandomizer.Models.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2024, 2, 18, 23, 45, 21, 616, DateTimeKind.Utc).AddTicks(2319));

                    b.Property<Guid>("GroupRefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new Guid("4d16e513-6d15-45c6-9855-40a0299106bd"));

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupRefId")
                        .IsUnique();

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("StudentRandomizer.Models.GroupEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2024, 2, 18, 23, 45, 21, 617, DateTimeKind.Utc).AddTicks(1545));

                    b.Property<long>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("OrderNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("StudentId", "GroupId")
                        .IsUnique();

                    b.ToTable("GroupEntries", (string)null);
                });

            modelBuilder.Entity("StudentRandomizer.Models.SchoolClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2024, 2, 18, 23, 45, 21, 616, DateTimeKind.Utc).AddTicks(902));

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SchoolClassRefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new Guid("05fad3ed-a3f4-4f0a-94d3-f0e1311ec78e"));

                    b.HasKey("Id");

                    b.HasIndex("SchoolClassRefId")
                        .IsUnique();

                    b.ToTable("SchoolClasses", (string)null);
                });

            modelBuilder.Entity("StudentRandomizer.Models.SchoolClassEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2024, 2, 18, 23, 45, 21, 616, DateTimeKind.Utc).AddTicks(8130));

                    b.Property<uint>("OrderNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SchoolClassId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("SchoolClassId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("StudentId", "SchoolClassId")
                        .IsUnique();

                    b.ToTable("SchoolClassEntries", (string)null);
                });

            modelBuilder.Entity("StudentRandomizer.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudentRefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new Guid("977ee329-bfa0-4c19-9466-9b7a5cc7a5b9"));

                    b.HasKey("Id");

                    b.HasIndex("StudentRefId")
                        .IsUnique();

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("StudentRandomizer.Models.GroupEntry", b =>
                {
                    b.HasOne("StudentRandomizer.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentRandomizer.Models.Student", "Student")
                        .WithMany("Groups")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentRandomizer.Models.SchoolClassEntry", b =>
                {
                    b.HasOne("StudentRandomizer.Models.SchoolClass", "SchoolClass")
                        .WithMany("Students")
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentRandomizer.Models.Student", "Student")
                        .WithOne("Class")
                        .HasForeignKey("StudentRandomizer.Models.SchoolClassEntry", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolClass");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentRandomizer.Models.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentRandomizer.Models.SchoolClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentRandomizer.Models.Student", b =>
                {
                    b.Navigation("Class");

                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
